user  nginx;
worker_processes  auto;  # Автоматическое использование всех доступных CPU

events {
    worker_connections  2048;  # Увеличение количества соединений для каждого воркера
    multi_accept on;  # Разрешить воркеру принимать сразу несколько соединений
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;  # Улучшение производительности отправки больших файлов
    tcp_nodelay     on;  # Уменьшение задержек при малых запросах
    keepalive_timeout  20;  # Уменьшаем таймаут для поддерживаемых соединений
    keepalive_requests 100;  # Ограничение количества запросов на одно соединение

    client_max_body_size 100M;  # Максимальный размер загружаемых файлов

    # Лимит количества запросов, обрабатываемых Nginx
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 20;  # Ограничиваем до 20 одновременных соединений с одного IP

    # Увеличение буферов для обработки больших заголовков HTTP
    client_header_buffer_size 4k;
    large_client_header_buffers 4 32k;

    # Кэширование статического контента
    open_file_cache max=1000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Включение Brotli сжатия
    brotli on;
    brotli_comp_level 6;  # Умеренный уровень сжатия
    brotli_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Включение Gzip сжатия как fallback
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 5;  # Умеренный уровень сжатия
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/css application/javascript application/json application/x-javascript text/javascript text/xml application/xml application/xml+rss text/plain image/svg+xml;

    server {
        listen 80;
        server_name 185.245.182.159;

        # Кэширование статического контента
        location /static/ {
            alias /app/staticfiles/;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            open_file_cache max=1000 inactive=30s;
            open_file_cache_valid 60s;
            open_file_cache_min_uses 2;
            open_file_cache_errors on;
        }

        location /media/ {
            alias /app/media/;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            open_file_cache max=1000 inactive=30s;
            open_file_cache_valid 60s;
            open_file_cache_min_uses 2;
            open_file_cache_errors on;
        }

        location / {
            proxy_pass http://web:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_buffering on;  # Включаем буферизацию для уменьшения нагрузки на backend
            proxy_buffers 16 16k;
            proxy_busy_buffers_size 24k;
        }
    }
}
